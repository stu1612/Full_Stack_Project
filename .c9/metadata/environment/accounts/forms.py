{"filter":false,"title":"forms.py","tooltip":"/accounts/forms.py","undoManager":{"mark":12,"position":12,"stack":[[{"start":{"row":0,"column":0},"end":{"row":44,"column":28},"action":"remove","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","","class UserLoginForm(forms.Form):","    \"\"\"form to log users\"\"\"","    ","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    \"\"\"form used to registrate new user\"\"\"","    ","    password1=forms.CharField(label=\"Password\",","    widget=forms.PasswordInput)","    password2=forms.CharField(","        label=\"Password Confirmation\", ","        widget=forms.PasswordInput)","        ","    class Meta:","        model = User","        fields = ['email', 'username', 'password1', 'password2']","        ","    def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email    ","        ","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1') ","        password2 = self.cleaned_data.get('password2') ","        ","        if not password1 or not password2:","            raise ValidationError('Please confirm your password')","            ","        if password1 != password2:","            raise ValidationError('Passwords must match')","            ","        return password2    "],"id":2},{"start":{"row":0,"column":0},"end":{"row":39,"column":24},"action":"insert","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    username_or_email = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    password1 = forms.CharField(label='Password', widget=forms.PasswordInput)","    password2 = forms.CharField(","        label='Password Confirmation',","        widget=forms.PasswordInput","    )","","    class Meta:","        model = User","        fields = ['username', 'email', 'password1', 'password2']","","    def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email addresses must be unique.')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Password must not be empty\")","","        if password1 != password2:","            raise ValidationError(\"Passwords do not match\")","","        return password2"]}],[{"start":{"row":39,"column":24},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":40,"column":0},"end":{"row":40,"column":8},"action":"insert","lines":["        "]},{"start":{"row":40,"column":8},"end":{"row":41,"column":0},"action":"insert","lines":["",""]},{"start":{"row":41,"column":0},"end":{"row":41,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":41,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":42,"column":0},"end":{"row":48,"column":8},"action":"insert","lines":["\"\"\"User add_review logic\"\"\"","","class ItemForm(forms.ModelForm):","    class Meta:","        model=Item","        fields=('company_name', 'company_manager', 'date', 'Feedback')","        "],"id":5}],[{"start":{"row":47,"column":17},"end":{"row":47,"column":29},"action":"remove","lines":["company_name"],"id":6},{"start":{"row":47,"column":17},"end":{"row":47,"column":18},"action":"insert","lines":["b"]},{"start":{"row":47,"column":18},"end":{"row":47,"column":19},"action":"insert","lines":["u"]},{"start":{"row":47,"column":19},"end":{"row":47,"column":20},"action":"insert","lines":["s"]},{"start":{"row":47,"column":20},"end":{"row":47,"column":21},"action":"insert","lines":["i"]},{"start":{"row":47,"column":21},"end":{"row":47,"column":22},"action":"insert","lines":["n"]},{"start":{"row":47,"column":22},"end":{"row":47,"column":23},"action":"insert","lines":["e"]},{"start":{"row":47,"column":23},"end":{"row":47,"column":24},"action":"insert","lines":["s"]},{"start":{"row":47,"column":24},"end":{"row":47,"column":25},"action":"insert","lines":["s"]}],[{"start":{"row":47,"column":29},"end":{"row":47,"column":37},"action":"remove","lines":["company_"],"id":7}],[{"start":{"row":47,"column":39},"end":{"row":47,"column":57},"action":"remove","lines":["'date', 'Feedback'"],"id":8},{"start":{"row":47,"column":39},"end":{"row":47,"column":40},"action":"insert","lines":["'"]},{"start":{"row":47,"column":40},"end":{"row":47,"column":41},"action":"insert","lines":["f"]},{"start":{"row":47,"column":41},"end":{"row":47,"column":42},"action":"insert","lines":["e"]},{"start":{"row":47,"column":42},"end":{"row":47,"column":43},"action":"insert","lines":["e"]},{"start":{"row":47,"column":43},"end":{"row":47,"column":44},"action":"insert","lines":["d"]},{"start":{"row":47,"column":44},"end":{"row":47,"column":45},"action":"insert","lines":["b"]},{"start":{"row":47,"column":45},"end":{"row":47,"column":46},"action":"insert","lines":["a"]},{"start":{"row":47,"column":46},"end":{"row":47,"column":47},"action":"insert","lines":["c"]},{"start":{"row":47,"column":47},"end":{"row":47,"column":48},"action":"insert","lines":["k"]}],[{"start":{"row":47,"column":48},"end":{"row":47,"column":49},"action":"insert","lines":["'"],"id":9},{"start":{"row":47,"column":49},"end":{"row":47,"column":50},"action":"insert","lines":[","]}],[{"start":{"row":47,"column":50},"end":{"row":47,"column":51},"action":"insert","lines":[" "],"id":10}],[{"start":{"row":47,"column":51},"end":{"row":47,"column":53},"action":"insert","lines":["''"],"id":11}],[{"start":{"row":47,"column":52},"end":{"row":47,"column":53},"action":"insert","lines":["d"],"id":12},{"start":{"row":47,"column":53},"end":{"row":47,"column":54},"action":"insert","lines":["a"]},{"start":{"row":47,"column":54},"end":{"row":47,"column":55},"action":"insert","lines":["t"]},{"start":{"row":47,"column":55},"end":{"row":47,"column":56},"action":"insert","lines":["e"]}],[{"start":{"row":0,"column":24},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":13}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":24},"action":"insert","lines":["from .models import Item"],"id":14}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":42,"column":0},"end":{"row":42,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1570996342602,"hash":"a4c295df848fe149afeae330caa825fa5ebc28a2"}